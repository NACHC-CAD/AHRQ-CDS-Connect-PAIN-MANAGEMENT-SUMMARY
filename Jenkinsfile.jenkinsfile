pipeline {
  agent any
  stages {

    stage('Set environment') {
      steps {
        script {
          def environment = 'staging'
          if (env.GIT_BRANCH != 'origin/master') {
            environment = env.GIT_BRANCH.split("/")[1]
            println("Environment: ${environment}");
          }
          env.ENVIRONMENT_NAME = environment

          env.DOCKER_LABEL = environment;

          if (env.ENVIRONMENT_NAME == 'staging') {
          env.DOCKER_LABEL = 'latest'
          }
          else if (env.ENVIRONMENT_NAME == 'develop') {
          env.DOCKER_LABEL = 'develop'
          }

          println("Docker Label: ${env.DOCKER_LABEL}");
        }
      }
    }
    
    stage('Docker Build') {
          steps {
            sh "docker build -t contentgroup/painmanager:${env.DOCKER_LABEL} ."
          }
        }

    stage('Docker Push') {
          steps {
            withCredentials([usernamePassword(credentialsId: 'dockerhub-jpercival', passwordVariable: 'dockerHubPassword', usernameVariable: 'dockerHubUser')]) {
              sh 'docker login -u $dockerHubUser -p $dockerHubPassword'
              sh "docker push contentgroup/painmanager:${env.DOCKER_LABEL}"
            }
          }
        }

  }
}